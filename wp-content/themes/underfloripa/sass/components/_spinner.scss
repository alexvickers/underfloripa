@use "sass:math";

// Spinner variables
$spinner-size: 64px;
$dot-width: 6px;
$dot-height: 18px;
$dot-color: #333;
$dot-count: 8;
$animation-duration: 1.2s;

// Spinner styling
.lds-spinner {
	display: inline-block;
	position: relative;
	width: $spinner-size;
	height: $spinner-size;

	div {
		transform-origin: math.div($spinner-size, 2) math.div($spinner-size, 2);
		animation: lds-spinner $animation-duration linear infinite;

		&:after {
			content: " ";
			display: block;
			position: absolute;
			top: 3px;
			left: math.div($spinner-size, 2) - math.div($dot-width, 2);
			width: $dot-width;
			height: $dot-height;
			border-radius: 20%;
			background: $dot-color;
		}

		@for $i from 1 through $dot-count {
			&:nth-child(#{$i}) {
				$angle: math.div(($i - 1) * 360, $dot-count) * 1deg;
				transform: rotate($angle);

				$delay: -($animation-duration - ($i * math.div($animation-duration, $dot-count)));
				animation-delay: $delay;
			}
		}
	}
}

@keyframes lds-spinner {
	0% {
		opacity: 1;
	}

	100% {
		opacity: 0;
	}
}

// Spinner container for IntersectionObserver
#load-more-spinner {
	text-align: center;
	margin: 2rem 0;
	visibility: hidden;
	height: 80px;
}
